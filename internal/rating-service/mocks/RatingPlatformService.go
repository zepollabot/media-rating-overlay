// Code generated by mockery. DO NOT EDIT.

package rating_mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	model "github.com/zepollabot/media-rating-overlay/internal/model"
)

// RatingPlatformService is an autogenerated mock type for the RatingPlatformService type
type RatingPlatformService struct {
	mock.Mock
}

type RatingPlatformService_Expecter struct {
	mock *mock.Mock
}

func (_m *RatingPlatformService) EXPECT() *RatingPlatformService_Expecter {
	return &RatingPlatformService_Expecter{mock: &_m.Mock}
}

// GetRating provides a mock function with given fields: ctx, item
func (_m *RatingPlatformService) GetRating(ctx context.Context, item model.Item) (model.Rating, error) {
	ret := _m.Called(ctx, item)

	if len(ret) == 0 {
		panic("no return value specified for GetRating")
	}

	var r0 model.Rating
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, model.Item) (model.Rating, error)); ok {
		return rf(ctx, item)
	}
	if rf, ok := ret.Get(0).(func(context.Context, model.Item) model.Rating); ok {
		r0 = rf(ctx, item)
	} else {
		r0 = ret.Get(0).(model.Rating)
	}

	if rf, ok := ret.Get(1).(func(context.Context, model.Item) error); ok {
		r1 = rf(ctx, item)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RatingPlatformService_GetRating_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetRating'
type RatingPlatformService_GetRating_Call struct {
	*mock.Call
}

// GetRating is a helper method to define mock.On call
//   - ctx context.Context
//   - item model.Item
func (_e *RatingPlatformService_Expecter) GetRating(ctx interface{}, item interface{}) *RatingPlatformService_GetRating_Call {
	return &RatingPlatformService_GetRating_Call{Call: _e.mock.On("GetRating", ctx, item)}
}

func (_c *RatingPlatformService_GetRating_Call) Run(run func(ctx context.Context, item model.Item)) *RatingPlatformService_GetRating_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(model.Item))
	})
	return _c
}

func (_c *RatingPlatformService_GetRating_Call) Return(_a0 model.Rating, _a1 error) *RatingPlatformService_GetRating_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *RatingPlatformService_GetRating_Call) RunAndReturn(run func(context.Context, model.Item) (model.Rating, error)) *RatingPlatformService_GetRating_Call {
	_c.Call.Return(run)
	return _c
}

// NewRatingPlatformService creates a new instance of RatingPlatformService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRatingPlatformService(t interface {
	mock.TestingT
	Cleanup(func())
}) *RatingPlatformService {
	mock := &RatingPlatformService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
