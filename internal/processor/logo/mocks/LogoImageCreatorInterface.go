// Code generated by mockery. DO NOT EDIT.

package logo_mocks

import (
	gg "github.com/fogleman/gg"

	mock "github.com/stretchr/testify/mock"
)

// LogoImageCreatorInterface is an autogenerated mock type for the LogoImageCreatorInterface type
type LogoImageCreatorInterface struct {
	mock.Mock
}

type LogoImageCreatorInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *LogoImageCreatorInterface) EXPECT() *LogoImageCreatorInterface_Expecter {
	return &LogoImageCreatorInterface_Expecter{mock: &_m.Mock}
}

// CreateContext provides a mock function with given fields: areaWidth, areaHeight, path
func (_m *LogoImageCreatorInterface) CreateContext(areaWidth float64, areaHeight float64, path string) (*gg.Context, error) {
	ret := _m.Called(areaWidth, areaHeight, path)

	if len(ret) == 0 {
		panic("no return value specified for CreateContext")
	}

	var r0 *gg.Context
	var r1 error
	if rf, ok := ret.Get(0).(func(float64, float64, string) (*gg.Context, error)); ok {
		return rf(areaWidth, areaHeight, path)
	}
	if rf, ok := ret.Get(0).(func(float64, float64, string) *gg.Context); ok {
		r0 = rf(areaWidth, areaHeight, path)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*gg.Context)
		}
	}

	if rf, ok := ret.Get(1).(func(float64, float64, string) error); ok {
		r1 = rf(areaWidth, areaHeight, path)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// LogoImageCreatorInterface_CreateContext_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateContext'
type LogoImageCreatorInterface_CreateContext_Call struct {
	*mock.Call
}

// CreateContext is a helper method to define mock.On call
//   - areaWidth float64
//   - areaHeight float64
//   - path string
func (_e *LogoImageCreatorInterface_Expecter) CreateContext(areaWidth interface{}, areaHeight interface{}, path interface{}) *LogoImageCreatorInterface_CreateContext_Call {
	return &LogoImageCreatorInterface_CreateContext_Call{Call: _e.mock.On("CreateContext", areaWidth, areaHeight, path)}
}

func (_c *LogoImageCreatorInterface_CreateContext_Call) Run(run func(areaWidth float64, areaHeight float64, path string)) *LogoImageCreatorInterface_CreateContext_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(float64), args[1].(float64), args[2].(string))
	})
	return _c
}

func (_c *LogoImageCreatorInterface_CreateContext_Call) Return(_a0 *gg.Context, _a1 error) *LogoImageCreatorInterface_CreateContext_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *LogoImageCreatorInterface_CreateContext_Call) RunAndReturn(run func(float64, float64, string) (*gg.Context, error)) *LogoImageCreatorInterface_CreateContext_Call {
	_c.Call.Return(run)
	return _c
}

// NewLogoImageCreatorInterface creates a new instance of LogoImageCreatorInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewLogoImageCreatorInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *LogoImageCreatorInterface {
	mock := &LogoImageCreatorInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
