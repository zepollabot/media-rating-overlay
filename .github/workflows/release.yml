name: Release Docker Image

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

env:
  IMAGE_NAME: media-rating-overlay
  REGISTRY: ghcr.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read    # To checkout the repository
      packages: write   # To push Docker images to GHCR

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            # For pushes to the default branch (e.g., main)
            type=raw,value=latest,enable=${{ github.ref_name == github.event.repository.default_branch }}
            # For semver tags (e.g., v1.2.3, v1.2.3-rc1)
            type=semver,pattern=v{{version}}
            # For full semver tags, also create vMajor.Minor and vMajor (e.g., v1.2, v1)
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern=v{{major}}
            # If a full semver tag (not a pre-release) is pushed, also tag it as 'latest'
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/v') && !contains(github.ref_name, '-') }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/golang/Dockerfile # Path to your Dockerfile
          target: prod                    # Docker build target, from your build-prod
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }} 